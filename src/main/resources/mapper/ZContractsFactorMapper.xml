<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.hailian.contract.dao.ZContractsFactorDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.haier.hailian.contract.entity.ZContractsFactor">
        <id column="id" property="id" />
        <result column="contract_id" property="contractId" />
        <result column="factor_code" property="factorCode" />
        <result column="factor_name" property="factorName" />
        <result column="factor_value" property="factorValue" />
        <result column="factor_type" property="factorType" />
        <result column="factor_unit" property="factorUnit" />
        <result column="factor_directon" property="factorDirecton" />
        <result column="region_code" property="regionCode" />
        <result column="region_name" property="regionName" />
        <result column="mesh_code" property="meshCode" />
        <result column="mesh_name" property="meshName" />
        <result column="is_lq_target" property="isLqTarget" />
        <result column="factor_value_actual" property="factorValueActual" />
    </resultMap>

    <resultMap id="ResultMap1" type="com.haier.hailian.contract.dto.ChainGroupTargetDTO">
        <result column="factor_code" property="targetCode" />
        <result column="factor_name" property="targetName" />
        <result column="factor_unit" property="targetUnit" />
        <result column="is_lq_target" property="isLqTarget" />
        <result column="bottom" property="bottom" />
        <result column="E2E" property="E2E" />
        <result column="grab" property="grab" />
    </resultMap>

    <select id="selectChainFactorByContractId" resultMap="ResultMap1">
        select factor_code,factor_name,factor_unit,is_lq_target,MAX(CASE factor_type WHEN '01' THEN factor_value  END ) bottom,
                MAX(CASE factor_type WHEN '02' THEN factor_value  END ) grab,
                MAX(CASE factor_type WHEN '03' THEN factor_value  END ) E2E
        from z_contracts_factor
        where region_code is NULL
        and contract_id = #{contractId}
        GROUP BY factor_code;
    </select>

    <select id="getFactorGrabList" resultType="com.haier.hailian.contract.dto.FactorGrabResDTO">
        SELECT
          t1.*,
          t2.*
        FROM
          (SELECT
            f.id AS factId,
            f.`contract_id` AS grabId,
            f.`factor_code` AS factorCode,
            f.`factor_name` AS factorName,
            f.`factor_value` AS factorValue,
            f.`factor_unit` AS factorUnit,
            IF(
              f.`factor_directon` = '1',
              '正向',
              '负向'
            ) AS factorDirecton,
            f.`factor_type` AS factorType,
            f.factor_value_actual AS factorValueActual,
            c.`org_name` AS nodeName,
            c.`org_code` AS nodeCode,
            c.share_percent AS sharePercent
          FROM
            z_contracts_factor f
            JOIN z_contracts c
              ON f.`contract_id` = c.`id`
          WHERE c.id IN
            (SELECT
              t.id
            FROM
              z_contracts t
            WHERE t.`parent_id` = #{contractId}
              AND t.`status` IN (1, 8)
              AND t.`contract_type` = 30)
          ORDER BY f.`factor_code`) t1
          LEFT JOIN
            (SELECT
              b.`target_code`,
              b.`target_logic` AS computeLogic,
              b.target_xw_category_code AS targetXwCategoryCode
            FROM
              z_target_basic b
            WHERE b.target_diff_type = '001'
              AND b.target_pt_code = #{ptCode}
            GROUP BY b.`target_code`
            UNION
            ALL
            SELECT
              b.`target_code`,
              b.`target_logic` AS computeLogic,
              b.target_xw_category_code AS targetXwCategoryCode
            FROM
              z_target_basic b
            WHERE b.target_diff_type = '004'
              AND b.target_pt_code = #{ptCode}
              AND b.chain_code = #{chainCode}
            GROUP BY b.`target_code`) t2
            ON t1.factorCode = t2.target_code
    </select>


    <select id="selectTyQualified" parameterType="map" resultType="integer">

        select COUNT(1) from
        (SELECT
        a.factor_value as value1,a.contract_id
        FROM
        z_contracts_factor a
        LEFT JOIN z_contracts b ON a.contract_id = b.id
        WHERE
        b.chain_code = #{chainCode}
        AND b.`status` IN (1, 8)
        AND b.contract_type = 20
        AND b.end_date > #{startTime}
        AND b.end_date <![CDATA[ < ]]> #{endTime}
        AND a.factor_code = 'T01001'
        AND a.factor_type='02') as t1

        LEFT JOIN (

        SELECT
        c.factor_value as value2,c.contract_id
        FROM
        z_contracts_factor c
        LEFT JOIN z_contracts b ON c.contract_id = b.id
        WHERE
        b.chain_code = #{chainCode}
        AND b.`status` IN (1, 8)
        AND b.contract_type = 20
        AND b.end_date > #{startTime}
        AND b.end_date <![CDATA[ < ]]> #{endTime}
        AND c.factor_code = 'T01001'
        AND c.factor_type='01') t2 on t1.contract_id=t2.contract_id
        where value1 <![CDATA[ >= ]]> value2

    </select>

    <!-- 事中显差查询接口开始 -->
    <select id="selectChainGamblingTarget" parameterType="com.haier.hailian.contract.dto.EventMiddleDTO" resultMap="BaseResultMap">
        select f.factor_code,f.factor_name,f.factor_unit,f.factor_value from z_contracts c
        join z_contracts_factor f
        on c.id = f.contract_id
        where c.contract_type='10'
        and c.id=#{contractId}
        and c.`status` != 4
        and f.factor_type='02'
        and f.region_code is NULL
    </select>
    <resultMap id="tyResultMap" type="com.haier.hailian.contract.dto.EventMiddleTYDTO">
        <id column="create_name" property="userName" />
        <id column="PJ_M" property="pjM" />
        <id column="mesh_name" property="littleXwName" />
        <id column="region_name" property="xwName" />
        <id column="jdIncome" property="jdIncome" />
        <id column="jdHigh" property="jdHigh" />
        <id column="qdIncome" property="qdIncome" />
        <id column="qdHigh" property="qdHigh" />
    </resultMap>
    <select id="selectTyTarget" resultMap="tyResultMap">
        select c.create_name,v.PJ_M,f1.mesh_code,f1.mesh_name,f1.region_code,f1.region_name,
                MAX(CASE f1.factor_code WHEN 'T01001' THEN f1.factor_value  END ) jdIncome,
                MAX(CASE f1.factor_code WHEN 'T03001' THEN f1.factor_value  END ) jdHigh,
                MAX(CASE f2.factor_code WHEN 'T01001' THEN f2.factor_value  END ) qdIncome,
                MAX(CASE f2.factor_code WHEN 'T03001' THEN f2.factor_value  END ) qdHigh
        from z_contracts t
        RIGHT JOIN z_contracts_factor f1
        on t.id =  f1.contract_id
        and f1.region_code is not null
        left join z_contracts c
        on c.parent_id=t.id
        and c.org_code=f1.mesh_code
        left join z_contracts_factor f2
        on f2.contract_id=c.id
        and f2.factor_type='02'
        LEFT JOIN v_jdxp v
        on v.CONTRACT_ID=t.id
        and v.JD_CODE=f1.mesh_code
        where t.id=#{contractId}
        GROUP BY f1.mesh_code
        order by jdIncome desc
    </select>
    <resultMap id="cdTargetResult" type="com.haier.hailian.contract.dto.EventMiddleCdDTO">
        <collection property="targetList" column="grabId"  select="getCDGrabResultTarget" />
        <collection property="planList" column="grabId"  select="getCDGrabResultPlan" />
    </resultMap>
    <!-- 创单抢单目标列表xwType3 -->
    <resultMap id="cdGrabResultTarget" type="com.haier.hailian.contract.dto.TargetViewDTO">
    </resultMap>
    <!-- 创单抢单预案列表xwType3 -->
    <resultMap id="cdGrabResultPlan" type="com.haier.hailian.contract.dto.ReservePlanDetailDTO">
    </resultMap>
    <select id="selectCdTarget" resultMap="cdTargetResult">
        select t.id as grabId,t.create_name as userName,o.littleXwCode,o.littleXwName,v.PJ_M,v.PJ_Y
        from z_contracts t
        LEFT JOIN t_ods_minbu o
        on t.org_code=o.littleXwCode
        LEFT JOIN v_jdxp v
        on v.CONTRACT_ID=t.parent_id
        and v.JD_CODE=t.org_code
        where t.parent_id=#{contractId}
        and t.contract_type='30'
        and t.`status` in ('1','8')
    </select>
    <select id="getCDGrabResultTarget" parameterType="map" resultMap="cdGrabResultTarget">
        SELECT
        f.`contract_id` AS contractId,
        f.`factor_code` AS targetCode,
        f.`factor_name` AS targetName,
        f.`factor_value`  AS targetValue,
        f.`factor_unit` AS targetUnit,
        f.`factor_type` AS targetType
        FROM
        z_contracts_factor f
        WHERE f.`contract_id` = #{grabId};
    </select>
    <select id="getCDGrabResultPlan" parameterType="map" resultMap="cdGrabResultPlan">
        SELECT
        p.`parent_id`,
        p.`title`,
        pd.`content`
        FROM
        z_reserve_plan p
        INNER JOIN z_reserve_plan_detail pd
        ON pd.parent_id = p.`id`
        WHERE p.`parent_id` = #{grabId};
    </select>
    <!-- 事中显差查询接口结束 -->


    <select id="selectCdReach" parameterType="map" resultType="integer">

        SELECT f.contract_id from z_contracts_factor f
        LEFT JOIN z_contracts_factor m on m.contract_id=f.contract_id

        WHERE f.contract_id in
        (
        SELECT
        b.id
        FROM
        z_contracts b
        WHERE
        b.chain_code = #{chainCode}
        AND b.`status` IN (1, 8)
        AND b.contract_type = 30
        AND b.end_date > #{startTime}
        AND b.end_date <![CDATA[ < ]]> #{endTime}
        )
        and cast(f.factor_value_actual as DECIMAL) >= cast(f.factor_value as DECIMAL)
        GROUP BY f.contract_id
        HAVING COUNT(DISTINCT f.id)=COUNT(DISTINCT m.id)

    </select>



    <select id="selectGrabInfo" parameterType="map" resultMap="BaseResultMap">

        SELECT
        *
        FROM
        z_contracts_factor a
        LEFT JOIN z_contracts b ON a.contract_id = b.id
        WHERE
        b.`status` IN (1, 8)
        AND b.org_code = #{orgCode}
        AND b.chain_code = #{chainCode}
        AND b.end_date > #{startTime}
        AND b.end_date <![CDATA[ < ]]> #{endTime}
        AND b.contract_type = '30'

    </select>





</mapper>
