<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.hailian.contract.dao.ZContractsDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.haier.hailian.contract.entity.ZContracts">
        <id column="id" property="id" />
        <result column="parent_id" property="parentId" />
        <result column="contract_name" property="contractName" />
        <result column="contract_type" property="contractType" />
        <result column="status" property="status" />
        <result column="share_space" property="shareSpace" />
        <result column="chain_code" property="chainCode" />
        <result column="region_code" property="regionCode" />
        <result column="join_time" property="joinTime" />
        <result column="join_time_str" property="joinTimeStr" />
        <result column="start_date" property="startDate" />
        <result column="end_date" property="endDate" />
        <result column="start_date_str" property="startDateStr" />
        <result column="end_date_str" property="endDateStr" />
        <result column="xiaowei_code" property="xiaoweiCode" />
        <result column="create_code" property="createCode" />
        <result column="create_name" property="createName" />
        <result column="create_time" property="createTime" />
        <result column="org_code" property="orgCode" />
        <result column="org_name" property="orgName" />
        <result column="org_type" property="orgType" />
        <result column="open_valid" property="openValid" />
        <result column="share_percent" property="sharePercent" />
        <result column="group_id" property="groupId" />
        <result column="open_valid" property="openValid" />
        <result column="check_time" property="checkTime" />
        <result column="check_time_str" property="checkTimeStr" />
    </resultMap>

    <!-- 体验列表映射结果 -->
    <resultMap id="TYResultMap" type="com.haier.hailian.contract.dto.ContractViewDataTYResponseNewDTO">
        <collection property="jdList" column="grabId"  select="selectFactorJDForTYNew" />
        <collection property="e2eList" column="grabId"  select="selectFactorE2EForTYNew" />
        <collection property="qdList" column="grabId"  select="selectFactorQDForTYNew" />
    </resultMap>
    <!-- 体验jd列表映射结果 -->
    <resultMap id="jdResultMap" type="com.haier.hailian.contract.dto.TargetConfigDTO">
    </resultMap>
    <!-- 体验e2e列表映射结果 -->
    <resultMap id="e2eResultMap" type="com.haier.hailian.contract.dto.TargetConfigDTO">
    </resultMap>
    <!-- 体验qd列表映射结果 -->
    <resultMap id="qdResultMap" type="com.haier.hailian.contract.dto.TargetConfigDTO">
    </resultMap>

    <!-- 创单抢单合约列表xwType3 -->
    <resultMap id="cdGrabResultType3" type="com.haier.hailian.contract.dto.CDGrabDataDTO">
        <collection property="targetList" column="grabId"  select="getCDGrabResultTargetType3List" />
        <collection property="planList" column="grabId"  select="getCDGrabResultPlanType3" />
    </resultMap>
    <!-- 创单抢单目标列表xwType3 -->
    <resultMap id="cdGrabResultTargetType3" type="com.haier.hailian.contract.dto.TargetViewDTO">
    </resultMap>
    <!-- 创单抢单预案列表xwType3 -->
    <resultMap id="cdGrabResultPlanType3" type="com.haier.hailian.contract.dto.ReservePlanDetailDTO">
    </resultMap>

    <select id="getCDGrabResultType3List" parameterType="map" resultMap="cdGrabResultType3">
        SELECT
          c.id AS grabId,
          c.id AS contractId,
          c.`org_code` AS nodeCode,
          c.`org_name` AS nodeName,
          e.`xwCode`,
          e.`xwName`,
          c.`share_percent` AS sharePercent,
        IF(c.`check_time`<![CDATA[ < ]]>NOW(), 'false', 'true') AS checkEnable,
        IF(c.`end_date`<![CDATA[ < ]]>NOW(),'false','true') AS kickoutEnable
        FROM
          z_contracts c
          JOIN sys_xiaowei_ehr e ON c.`xiaowei_code` = e.`xwCode`
        WHERE c.parent_id = #{contractId}
          AND c.`status` in ('1','8')
          AND c.`contract_type` = 30
          AND c.`org_type` LIKE CONCAT('%|',#{type3Code}, '|%')
        <if test=" grabId != null and grabId != 'null' and grabId != '' ">
            and c.id = #{grabId}
        </if>
    </select>
    <select id="getCDGrabResultTargetType3List" parameterType="map" resultMap="cdGrabResultTargetType3">
        SELECT
          f.`contract_id` AS contractId,
          f.`factor_code` AS targetCode,
          f.`factor_name` AS targetName,
          f.`factor_value`  AS targetValue,
          f.`factor_unit` AS targetUnit,
          f.`factor_type` AS targetType
        FROM
          z_contracts_factor f
        WHERE f.`contract_id` = #{contractId};
    </select>
    <select id="getCDGrabResultPlanType3" parameterType="map" resultMap="cdGrabResultPlanType3">
        SELECT
          p.`parent_id`,
          p.`title`,
          pd.`content`
        FROM
          z_reserve_plan p
          INNER JOIN z_reserve_plan_detail pd
            ON pd.parent_id = p.`id`
        WHERE p.`parent_id` = #{contractId};
    </select>

    <sql id="Base_Column_List">
        id,parent_id,contract_name,contract_type,status,share_space,chain_code,
        region_code,join_time,DATE_FORMAT(join_time,'%Y-%m-%d %H:%i:%s') as join_time_str,start_date,DATE_FORMAT(start_date,'%Y-%m-%d %H:%i:%s') as start_date_str,
        end_date,DATE_FORMAT(end_date,'%Y-%m-%d %H:%i:%s') as end_date_str,
        check_time,DATE_FORMAT(check_time,'%Y-%m-%d %H:%i:%s') as check_time_str,
        xiaowei_code,create_code,
        create_name,create_time,org_code,org_name,org_type,group_id,open_valid
    </sql>
    <select id="selectContractToUpdate" resultType="java.lang.String">
        select GROUP_CONCAT(id) from z_contracts base
        where contract_type=10
        and status = '0'
        and not EXISTS (
            select 1 from z_contracts where
                        parent_id=base.id and contract_type in ('20','30') and status = '1'
        )
        and not EXISTS (
            select 1 from z_contracts t1
            LEFT JOIN z_contracts t2
            on t1.id = t2.parent_id
            where t1.parent_id=base.id and t2.contract_type in ('20','30') and t2.status = '1'
        )
    </select>
    <select id="selectByContractId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts
        where id = #{contractId}
    </select>
    <select id="selectContractList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts
        <where>
            <if test=" contractName != null and contractName != '' ">
                and contract_name like CONCAT('%', #{contractName}, '%')
            </if>
            <if test=" chainCode != null and chainCode != '' ">
                and chain_code = #{chainCode}
            </if>
            <if test=" nextMonth != null and nextMonth != '' ">
                and DATE_FORMAT(start_date,'%Y%m') = #{nextMonth}
            </if>
            <if test=" status != null and status != '' ">
                and status = #{status}
            </if>
            <if test=" startDate != null and startDate != '' ">
                and DATE_FORMAT(start_date,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate},'%Y-%m-%d')
            </if>
            <if test=" endDate != null and endDate != ''">
                and DATE_FORMAT(#{endDate},'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(end_date,'%Y-%m-%d')
            </if>
            <if test=" startShare != null ">
                and share_space <![CDATA[ >= ]]> #{startShare}
            </if>
            <if test=" endShare != null ">
                and #{endShare} <![CDATA[ >= ]]> share_space
            </if>
            <if test=" userCode != null and userCode != '' ">
                and create_code = #{userCode}
            </if>
            <if test="chainCodeList != null">
                and chain_code in
                <foreach collection="chainCodeList" open="(" close=")" separator=","
                         item="chainCodeList" index="i">
                    #{chainCodeList}
                </foreach>
            </if>
            <if test=" parentId != null ">
                and parent_id = #{parentId}
            </if>
            and contract_type='10'
            <if test=' paixu != null and paixu == "1" '>
                order by share_space ASC
            </if>
            <if test=' paixu != null and paixu == "2" '>
                order by share_space DESC
            </if>
            <if test=' paixu != null and paixu == "3" '>
                order by  start_date ASC
            </if>
            <if test=' paixu != null and paixu == "4" '>
                order by start_date DESC
            </if>
            <if test=" paixu == null ">
                order by id desc
            </if>
        </where>
    </select>

    <select id="selectMyGrabContract" resultMap="BaseResultMap">
        select
        t.id,t.parent_id,t.contract_name,t.contract_type,t.status,p.share_space,t.chain_code,
        t.region_code,t.join_time,DATE_FORMAT(t.join_time,'%Y-%m-%d %H:%i:%s') as join_time_str,t.start_date,DATE_FORMAT(t.start_date,'%Y-%m-%d %H:%i:%s') as start_date_str,
        t.end_date,DATE_FORMAT(t.end_date,'%Y-%m-%d %H:%i:%s') as end_date_str,
        DATE_FORMAT(t.check_time,'%Y-%m-%d %H:%i:%s') as check_time_str,
        t.xiaowei_code,t.create_code,
        t.create_name,t.create_time,t.org_code,t.org_name,t.org_type,t.group_id,t.open_valid
        from z_contracts t
        LEFT JOIN z_contracts p
        on t.parent_id=p.id
        <where>
            <if test=" chainCode != null and chainCode != '' ">
                and t.chain_code = #{chainCode}
            </if>
            <if test=" status != null and status != '' ">
                and t.status = #{status}
            </if>
            <if test=" startDate != null and startDate != '' ">
                and DATE_FORMAT(t.start_date,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate},'%Y-%m-%d')
            </if>
            <if test=" endDate != null and endDate != ''">
                and DATE_FORMAT(#{endDate},'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(t.end_date,'%Y-%m-%d')
            </if>
            <if test=" contractName != null and contractName != '' ">
                and t.contract_name like CONCAT('%', #{contractName}, '%')
            </if>
            <if test=" startShare != null ">
                and p.share_space <![CDATA[ >= ]]> #{startShare}
            </if>
            <if test=" endShare != null ">
                and #{endShare} <![CDATA[ >= ]]> p.share_space
            </if>
            and t.create_code = #{userCode}
            and t.status in ('1','8')
            and t.contract_type = '30'
            <if test=' paixu != null and paixu == "1" '>
                order by p.share_space ASC
            </if>
            <if test=' paixu != null and paixu == "2" '>
                order by p.share_space DESC
            </if>
            <if test=' paixu != null and paixu == "3" '>
                order by  p.start_date ASC
            </if>
            <if test=' paixu != null and paixu == "4" '>
                order by p.start_date DESC
            </if>
            <if test=" paixu == null ">
                order by t.id desc
            </if>
        </where>
    </select>
    <select id="selectToGrabContract" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts base
        <where>
            <if test=" contractName != null and contractName != '' ">
                and contract_name like CONCAT('%', #{contractName}, '%')
            </if>
            <if test=" chainCode != null and chainCode != '' ">
                and chain_code = #{chainCode}
            </if>
            <if test=" startDate != null and startDate != '' ">
                and DATE_FORMAT(start_date,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate},'%Y-%m-%d')
            </if>
            <if test=" endDate != null and endDate != ''">
                and DATE_FORMAT(#{endDate},'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(end_date,'%Y-%m-%d')
            </if>
            <if test=" startShare != null ">
                and share_space <![CDATA[ >= ]]> #{startShare}
            </if>
            <if test=" endShare != null ">
                and #{endShare} <![CDATA[ >= ]]> share_space
            </if>
            <if test="chainCodeList != null">
                and chain_code in
                <foreach collection="chainCodeList" open="(" close=")" separator=","
                         item="chainCodeList" index="i">
                    #{chainCodeList}
                </foreach>
            </if>
            and not EXISTS (select 1 from z_contracts where
                parent_id=base.id and contract_type in ('20','30') and status in ('1','8') and org_code = #{littleXwCode}
                )
            -- 排除有子链群的主合约
            and not EXISTS (select 1 from z_contracts where
            parent_id=base.id and contract_type='10'
            )
            and contract_type='10' and status = '0'
            <if test=' paixu != null and paixu == "1" '>
                order by share_space ASC
            </if>
            <if test=' paixu != null and paixu == "2" '>
                order by share_space DESC
            </if>
            <if test=' paixu != null and paixu == "3" '>
                order by  start_date ASC
            </if>
            <if test=' paixu != null and paixu == "4" '>
                order by start_date DESC
            </if>
            <if test=" paixu == null ">
                order by id desc
            </if>
        </where>
    </select>
    <select id="selectKickedOutContract" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts base
        <where>
            <if test=" contractName != null and contractName != '' ">
                and contract_name like CONCAT('%', #{contractName}, '%')
            </if>
            <if test=" chainCode != null and chainCode != '' ">
                and chain_code = #{chainCode}
            </if>
            <if test=" startDate != null and startDate != '' ">
                and DATE_FORMAT(start_date,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate},'%Y-%m-%d')
            </if>
            <if test=" endDate != null and endDate != ''">
                and DATE_FORMAT(#{endDate},'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(end_date,'%Y-%m-%d')
            </if>
            <if test=" startShare != null ">
                and share_space <![CDATA[ >= ]]> #{startShare}
            </if>
            <if test=" endShare != null ">
                and #{endShare} <![CDATA[ >= ]]> share_space
            </if>
            and EXISTS (
            select 1 from z_contracts
            where parent_id=base.id and contract_type in ('20','30') and status = '3'
            and org_code = #{littleXwCode}
            )
            and NOT EXISTS (
            select 1 from z_contracts
            where parent_id=base.id and contract_type in ('20','30') and status in ('1','8')
            and org_code = #{littleXwCode}
            )
            and contract_type='10' and status = '1'
            order by id desc
        </where>
    </select>

    <select id="selectUserList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts
        where contract_type !='10'
        and parent_id = #{id}
    </select>

    <select id="selectAllContracts" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts
        where group_id is null
    </select>

    <select id="selectAllContractsById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts
        where parent_id =#{pId}
    </select>


    <select id="selectByGID" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts
        where create_code =#{userCode}
        and group_id = #{groupId}
        and parent_id != 0
    </select>

    <select id="selectContractsViewForCD" resultType="com.haier.hailian.contract.dto.ContractViewDataCD">
        SELECT
          node.id,
          node.node_code AS nodeCode,
          IF(
            t2.create_name IS NULL,
            node.node_name,
            (
              CONCAT(
                node.node_name,
                '(',
                t2.create_name,
                ')'
              )
            )
          ) AS nodeName,
          t2.contractId,
          IFNULL(t2.`contract_name`, '未抢入') AS contractName,
          IFNULL(t2.`factor_name`, '未抢入') AS targetName,
          IFNULL(t2.`factor_value`, '未抢入') AS targetValue,
          IFNULL(t2.`factor_unit`, '未抢入') AS targetUnit
        FROM
          (SELECT
            node.*
          FROM
            z_node_target_percent_info node
          WHERE node.share_percent IS NOT NULL
            AND node.lq_code IN
            (SELECT
              chain_code
            FROM
              z_contracts
            WHERE id = #{contractId})) node
          LEFT JOIN
            (SELECT
              zc.id AS contractId,
              zc.`contract_name`,
              zc.`org_code`,
              zc.`org_name`,
              zc.`create_name`,
              cf.`factor_code`,
              cf.`factor_name`,
              cf.`factor_value`,
              cf.`factor_unit`
            FROM
              z_contracts zc
              JOIN z_contracts_factor cf
                ON cf.`contract_id` = zc.`id`
            WHERE zc.parent_id = #{contractId}
              AND zc.`status` in ('1','8')
              AND zc.contract_type = '30') t2
            ON node.`node_code` = t2.org_code
        <where>
            <if test="xwName != null and xwName != ''">
                node.node_name like CONCAT('%', #{xwName}, '%')
            </if>
        </where>
    </select>

    <select id="selectContractsViewForTY" resultType="com.haier.hailian.contract.dto.ContractViewDataTY">
        SELECT
          zc.`contract_name`,
          xw.`xwName`,
          cf.*
        FROM
          z_contracts_factor cf
          JOIN z_contracts zc
            ON cf.`contract_id` = zc.id
            JOIN sys_xiaowei_ehr xw ON zc.`xiaowei_code` = xw.`xwCode`
        WHERE cf.`contract_id` IN
          (SELECT
            t1.id
          FROM
            z_contracts t1
          WHERE t1.contract_type = '20' AND t1.`status` = '1' AND t1.`parent_id` = #{contractId})
        ORDER BY xwName, factor_code,factor_type
    </select>

    <select id="selectContractsViewForTYCount" resultType="int">
        SELECT
            ifnull(count(t1.id),0)
          FROM
            z_contracts t1
          WHERE t1.contract_type = '20' AND t1.`status` in ('1', '8') AND t1.`parent_id` = #{contractId}
    </select>

    <select id="selectContractsViewForTYNew" parameterType="map" resultMap="TYResultMap">
        SELECT
          *
        FROM
          (
            (SELECT
              zc.id AS grabId,
              zc.`contract_name`,
                IF(
                zc.create_name IS NULL,
                xw.`xwName`,
                (
                CONCAT(
                xw.`xwName`,
                '(',
                zc.create_name,
                ')'
                )
                )
                ) AS xwName,
              cf.factor_name,
              cf.`factor_code`,
              cf.`factor_value`,
              cf.`factor_type`,
              cf.`factor_unit`,
              '1' AS isGrab
            FROM
              z_contracts_factor cf
              JOIN z_contracts zc
                ON cf.`contract_id` = zc.id
                AND cf.`factor_type` = '02'
                AND cf.`factor_code` = #{factorCode}
              JOIN sys_xiaowei_ehr xw
                ON zc.`xiaowei_code` = xw.`xwCode`
            WHERE cf.`contract_id` IN
              (SELECT
                t1.id
              FROM
                z_contracts t1
              WHERE t1.contract_type = '20'
                AND t1.`status` in ('1','8')
                AND t1.`parent_id` = #{contractId})
            ORDER BY CONVERT(cf.`factor_value`,DECIMAL) DESC)
            UNION
            (SELECT
              '' AS grabId,
              '' AS contract_name,
              node.xw_name AS xwName,
              '' AS factor_name,
              '' AS factor_code,
              '' AS factor_value,
              '' AS factor_type,
              '' AS factor_unit,
              '0' AS isGrab
            FROM
              z_node_target_percent_info node
            WHERE node.share_percent IS NULL
              AND node.lq_code IN
              (SELECT
                chain_code
              FROM
                z_contracts
              WHERE id = #{contractId})
              AND NOT EXISTS
              (SELECT
                id
              FROM
                z_contracts t1
              WHERE t1.contract_type = '20'
                AND t1.`status` in ('1','8')
                AND t1.`xiaowei_code` = node.xw_code
                AND t1.`parent_id` = #{contractId}))
          ) t
        <where>
            <if test="xwName != null and xwName != ''">
                t.xwName like CONCAT('%', #{xwName}, '%')
            </if>
        </where>
        <if test="isgrab!=null and isgrab == 'yes'">
          HAVING t.factor_code != ''
        </if>
        <if test="isgrab!=null and isgrab == 'no'">
            HAVING t.factor_code = ''
        </if>
        ORDER BY t.isGrab DESC, CONVERT(t.`factor_value`,DECIMAL) DESC
    </select>

    <select id="selectFactorJDForTYNew" parameterType="map" resultMap="jdResultMap">
        SELECT
          cf.`factor_code` AS targetCode,
          cf.`factor_name` AS targetName,
          cf.`factor_value` AS targetValue,
          cf.`factor_type` AS targetType,
          cf.`factor_unit` AS targetUnit
        FROM
          z_contracts_factor cf
        WHERE cf.`contract_id` = #{grabId}  AND cf.`factor_type` = '01'
        ORDER BY cf.`factor_code`
    </select>

    <select id="selectFactorE2EForTYNew" parameterType="map" resultMap="e2eResultMap">
        SELECT
          cf.`factor_code` AS targetCode,
          cf.`factor_name` AS targetName,
          cf.`factor_value` AS targetValue,
          cf.`factor_type` AS targetType,
          cf.`factor_unit` AS targetUnit
        FROM
          z_contracts_factor cf
        WHERE cf.`contract_id` = #{grabId}  AND cf.`factor_type` = '03'
        ORDER BY cf.`factor_code`
    </select>

    <select id="selectFactorQDForTYNew" parameterType="map" resultMap="qdResultMap">
        SELECT
          cf.`factor_code` AS targetCode,
          cf.`factor_name` AS targetName,
          cf.`factor_value` AS targetValue,
          cf.`factor_type` AS targetType,
          cf.`factor_unit` AS targetUnit
        FROM
          z_contracts_factor cf
        WHERE cf.`contract_id` = #{grabId}  AND cf.`factor_type` = '02'
        ORDER BY cf.`factor_code`
    </select>

    <select id="selectFactorListForTYNew" parameterType="map" resultMap="TYResultMap">
        SELECT
          zc.`contract_name`,
          xw.`xwName`,
          cf.*
        FROM
          z_contracts_factor cf
          JOIN z_contracts zc
            ON cf.`contract_id` = zc.id
            AND cf.`factor_code` = #{factorCode}
          JOIN sys_xiaowei_ehr xw
            ON zc.`xiaowei_code` = xw.`xwCode`
        WHERE cf.`contract_id` IN
          (SELECT
            t1.id
          FROM
            z_contracts t1
          WHERE t1.contract_type = '20'
            AND t1.`status` = '1'
            AND t1.`parent_id` = #{contractId})
        ORDER BY cf.`factor_value` #{orderStr}
    </select>

    <select id="selectContractsViewForTYSum" resultType="com.haier.hailian.contract.dto.FactorConfigDTO">
        SELECT
          cf.`factor_code` AS factorCode, cf.`factor_name` AS factorName ,cf.`factor_unit` AS factorUnit,
          IF(
            cf.factor_unit = '%',
            REPLACE(FORMAT(AVG(cf.factor_value), 2),',', ''),
            REPLACE(FORMAT(SUM(cf.factor_value), 2),',','')
          ) AS factorValue
        FROM
          z_contracts_factor cf
        WHERE cf.factor_type='02' and cf.`contract_id` IN
          (SELECT
            t1.id
          FROM
            z_contracts t1
          WHERE t1.contract_type = '20' AND t1.`status` in ('1', '8') AND (t1.`parent_id` = #{contractId} OR t1.`parent_id` IN (SELECT t2.id FROM z_contracts t2 WHERE t2.`parent_id` = #{contractId} AND t2.contract_type = '10')))
           GROUP BY factor_code
    </select>

    <select id="selectContractsTitleForTY" resultType="com.haier.hailian.contract.dto.TargetTitleTYDTO">
        SELECT
          cf.factor_code AS targetCode,
          cf.factor_name AS targetName,
          cf.factor_unit AS targetUnit
        FROM
          z_contracts_factor cf
        WHERE cf.`contract_id` IN
          (SELECT
            t1.id
          FROM
            z_contracts t1
          WHERE t1.contract_type = '20'
            AND t1.`status` = '1'
            AND t1.`parent_id` = #{contractId})
         GROUP BY factor_code;
    </select>

    <select id="queryTyGrabList" resultMap="BaseResultMap" >
        select * from z_contracts base where contract_type='10' and status='0'
        <if test=" startDate != null and startDate != '' ">
            and DATE_FORMAT(start_date,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test=" endDate != null and endDate != ''">
            and DATE_FORMAT(#{endDate},'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(end_date,'%Y-%m-%d')
        </if>
        <if test="chainCodes!=null">
            and chain_code in
            <foreach collection="chainCodes" item="item" index="index" open="(" close=")"  separator="," >
                #{item}
            </foreach>
        </if>
        <if test=" name != null and name != ''">
            and contract_name like CONCAT(CONCAT('%', #{name}), '%')
        </if>
        and not EXISTS (select 1 from z_contracts where
        parent_id=base.id and contract_type='20' and status in('1','8') and org_code=#{loginBuCode}
        )
        and not exists(select 1 from z_contracts where
        parent_id=base.id and contract_type='10')
        order by id desc
    </select>

    <select id="queryTyMyGrabList" resultMap="BaseResultMap" >
        select base.id, base.create_code, base.chain_code,
        base.region_code,base.join_time,base.start_date,
        base.end_date, base.xiaowei_code, base.share_space,
        zc.contract_name, zc.create_name
        from z_contracts base
        join z_contracts zc on base.parent_id=zc.id
        where base.contract_type='20' and base.status in('1','8')
        and base.create_code=#{empSn}
        <if test=" startDate != null and startDate != '' ">
            and DATE_FORMAT(base.start_date,'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test=" endDate != null and endDate != ''">
            and DATE_FORMAT(#{endDate},'%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(base.end_date,'%Y-%m-%d')
        </if>
        <if test=" name != null and name != ''">
            and zc.contract_name like CONCAT(CONCAT('%', #{name}), '%')
        </if>
        order by base.id desc
    </select>



    <select id="getContractSize" resultType="java.lang.Integer">
        SELECT count(*)
        FROM
        z_node_target_percent_info node
        where node.share_percent is not null and node.lq_code in (select chain_code from z_contracts where id=#{contractId})

    </select>

    <select id="getContractSize2" resultType="java.lang.Integer">
        SELECT count(*)
        FROM
        z_node_target_percent_info node
        where node.share_percent is null and node.lq_code in (select chain_code from z_contracts where id=#{contractId})

    </select>
    <select id="selectByTime" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts
        where join_time <![CDATA[ >= ]]> #{startTime}
        and join_time <![CDATA[ <= ]]> #{endTime}
        and group_id = #{groupId}
        and contract_type = '10'
        and status!='4'
    </select>

    <select id="selectHomePageContract" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from (  select t.id,t.parent_id,t.contract_name,t.contract_type,p.STATUS,p.share_space,
                t.chain_code,t.region_code,t.join_time,t.start_date,t.end_date,t.xiaowei_code,
                t.create_code,t.create_name,t.create_time,t.org_code,t.org_name,t.org_type,
                t.share_percent,t.group_id,t.open_valid,t.check_time,t.is_checked
                from z_contracts t
                LEFT JOIN z_contracts p
                on t.parent_id=p.id
                where t.create_code = #{userCode}
                and t.status in ('1','8')
                and t.contract_type in ('20','30')
             UNION all (
                select *
                from z_contracts c
                where create_code = #{userCode}
                and contract_type='10'
                and not EXISTS (
                    select 1
                    from z_contracts
                    where create_code = #{userCode}
                    and status in ('1','8')
                    and contract_type in ('20','30')
                    and parent_id = c.id
                )
        )) a
        ORDER BY a.start_date DESC
    </select>


    <select id="selectByChainCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from z_contracts
        where chain_code =#{chainCode}
        and start_date <![CDATA[ >= ]]> #{opTime}
        and parent_id = 0
    </select>
    <select id="selectGamnlingBeginDate" resultType="java.util.Date">
      select start_date from z_waring_period_config
      where chain_code=#{chainCode}
      and  DATE_FORMAT(start_date,'%Y%m') = DATE_FORMAT(CURDATE(), '%Y%m' )
    </select>

    <select id="selectContractsViewForCDNew" parameterType="map" resultType="com.haier.hailian.contract.dto.CDGrabDataDTO">
    </select>
</mapper>
